{"version":3,"sources":["api.js","theme.js","Service.jsx","ServiceLine.jsx","Languages.jsx","Params.jsx","Text.jsx","Response.jsx","ServiceList.jsx","App.jsx","index.js","assets/charade.png"],"names":["protocol","window","location","host","hostname","apiPort","port","apiUrl","getServices","fetch","theme","createMuiTheme","palette","common","black","white","background","paper","default","secondary","light","main","dark","contrastText","primary","error","text","disabled","hint","Note","styled","Grid","Item","padding","spacing","SpacedArea","CardActions","SpacedPaper","Paper","Service","props","state","open","this","setState","onSelect","desc","task","name","langs","dependencies","deps","length","join","languages","item","xs","Card","CardContent","Typography","variant","container","Divider","orientation","Switch","checked","selected","onChange","bind","Button","color","onClick","openPopover","Popover","onClose","closePopover","anchorOrigin","vertical","horizontal","transformOrigin","src","displayObjectSize","displayDataTypes","React","Component","titleCase","s","toUpperCase","slice","toLowerCase","ServiceLine","taskName","split","map","implementations","i","key","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","Languages","items","MenuItem","value","choices","forEach","lang","push","FormControl","InputLabel","Select","Params","params","param","type","TextField","select","e","target","label","c","required","parseInt","LargeTextField","width","Text","CardHeader","title","multiline","rows","content","FormControlLabel","control","debug","onToggleDebug","labelPlacement","onChooseLang","extraParams","onChangeParam","onSend","LargeCard","Response","response","ServiceList","json","undefined","visibleTab","then","services","event","currentSelection","tasks","Object","entries","k","v","request","httpHeaders","Headers","append","method","body","JSON","stringify","headers","callServices","onResults","tab","currentParams","result","ys","x","some","y","intersection","concat","lowerView","onTextChange","collectLangs","collectExtraParams","Tabs","onChangeTab","indicatorColor","textColor","Tab","Logo","Box","height","Header","borderBottom","marginBottom","App","ThemeProvider","Container","component","logo","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8a52a43d.chunk.js","sourcesContent":["// If the frontend is served on a non system port, we assume that the server\n// is available on port 9000.\n// Otherwise, we assume that the server runs on the same port as the\n// frontend (80 or 443 depending on the protocol).\nconst protocol = window.location.protocol;\nconst host = window.location.hostname;\nconst frontendPort = window.location.port;\nconst protocolDefaultPort = (protocol === 'http:') ? '80' : '443';\nconst apiPort = (frontendPort === '') ? protocolDefaultPort : '9000';\nconst apiUrl = `${protocol}//${host}:${apiPort}/`;\n\nexport const getServices = fetch(apiUrl);\n\nexport const callServices = (services) => {\n\tvar httpHeaders = new Headers();\n\thttpHeaders.append(\"Content-Type\", \"application/json\");\n\treturn fetch(apiUrl, {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(services),\n\t\theaders: httpHeaders\n\t});\n};","import { createMuiTheme } from '@material-ui/core/styles'\n\n\nconst theme = createMuiTheme({\n  palette: {\n    common: {\n      black: '#000',\n      white: '#fff'\n    },\n    background: {\n      paper: '#fff',\n      default: '#fff'\n    },\n    secondary: {\n      light: 'rgba(226, 0, 26, 1)',\n      main: 'rgba(226, 0, 26, 1)',\n      dark: 'rgba(170, 28, 13, 1)',\n      contrastText: '#fff'\n    },\n    primary: {\n      light: 'rgba(0, 175, 208, 1)',\n      main: 'rgba(0, 175, 208, 1)',\n      dark: 'rgba(0, 161, 151, 1)',\n      contrastText: '#fff'\n    },\n    error: {\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f',\n      contrastText: '#fff'\n    },\n    text: {\n      primary: 'rgba(0, 0, 0, 0.87)',\n      secondary: 'rgba(0, 0, 0, 0.54)',\n      disabled: 'rgba(0, 0, 0, 0.38)',\n      hint: 'rgba(0, 0, 0, 0.38)'\n    }\n  }\n})\n\nexport default theme","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Switch from '@material-ui/core/Switch'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Divider from '@material-ui/core/Divider'\nimport Paper from '@material-ui/core/Paper'\nimport Popover from '@material-ui/core/Popover'\nimport { styled } from '@material-ui/core/styles'\nimport ReactJson from 'react-json-view'\n\nimport theme from './theme'\n\nconst Note = styled(Grid)({\n  'font-size': '0.7em',\n  'color': theme.palette.primary.dark\n})\n\nconst Item = styled(Grid)({\n  padding: theme.spacing(1)\n})\n\nconst SpacedArea = styled(CardActions)({\n  padding: theme.spacing(2)\n})\n\nconst SpacedPaper = styled(Paper)({\n  padding: theme.spacing(5)\n})\n\nclass Service extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n  }\n\n  closePopover() {\n    this.setState({ open: false })\n  }\n\n  openPopover() {\n    this.setState({ open: true })\n  }\n\n  onSelect() {\n    this.props.onSelect(\n      this.props.desc.task,\n      this.props.desc.name,\n      this.props.desc.langs,\n      this.props.desc['extra-params']\n    )\n  }\n\n  render() {\n    const dependencies = this.props.desc.deps.length ? this.props.desc.deps.join(', ') : '-'\n    const languages = this.props.desc.langs ? this.props.desc.langs.join(', ') : '*'\n\n    return (\n      <Item item xs={3}>\n        <Card>\n          <CardContent>\n            <Typography variant='overline'>{this.props.desc.name}</Typography>\n\n            <Grid container>\n              <Note item xs={6}>\n                Languages: <br />\n                <Typography variant='subtitle2'>{languages}</Typography>\n              </Note>\n              <Divider orientation='vertical' />\n              <Note item xs={5}>\n                Deps: <br/>\n                <Typography variant='subtitle2'>{dependencies}</Typography>\n              </Note>\n            </Grid>\n\n          </CardContent>\n\n          <SpacedArea>\n            <Switch\n              checked={this.props.selected}\n              onChange={this.onSelect.bind(this)}>\n            </Switch>\n            <Button\n              variant='contained'\n              color='primary'\n              onClick={this.openPopover.bind(this)}\n            >+</Button>\n            <Popover\n              open={this.state.open}\n              onClose={this.closePopover.bind(this)}\n              anchorOrigin={{\n                vertical: 'center',\n                horizontal: 'center',\n              }}\n              transformOrigin={{\n                vertical: 'center',\n                horizontal: 'center',\n              }}\n            >\n              <SpacedPaper>\n                <Typography variant='subtitle2'>{this.props.desc.task} - {this.props.desc.name}</Typography>\n                <ReactJson\n                  src={this.props.desc}\n                  displayObjectSize={false}\n                  displayDataTypes={false}\n                />\n              </SpacedPaper>\n            </Popover>\n          </SpacedArea>\n        </Card>\n      </Item>\n    )\n    }\n}\n\nexport default Service","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\nimport Service from './Service'\n\nfunction titleCase(s) {\n  return s[0].toUpperCase() + s.slice(1).toLowerCase()\n}\n\nfunction normalizeName(name) {\n  const parts = name.split('-')\n  return parts.map(titleCase).join(' ')\n}\n\nconst ServiceLine = (props) => {\n  const taskName = normalizeName(props.task)\n  const implementations = props.implementations.map(\n    (i) => <Service\n      desc={i}\n      key={i.name}\n      selected={i.name === props.selected}\n      onSelect={props.onSelect}\n    />\n  )\n\n  return (\n    <Grid item xs={12}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography variant='h5'>{taskName}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          {implementations}\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </Grid>\n  )\n}\n\nexport default ServiceLine","import React from 'react'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\n\nconst Languages = (props) => {\n  let items = [<MenuItem value={1000} key={'none'}>(none)</MenuItem>]\n  var selected = 1000\n  if (! props.choices) {\n    return null\n  }\n  props.choices.forEach((lang, i) => {\n    if (lang === props.lang) {\n      selected = i\n    }\n    items.push(<MenuItem value={i} key={lang}>{lang}</MenuItem>)\n  })\n\n  return (\n    <FormControl>\n      <InputLabel>Language</InputLabel>\n      <Select value={selected} onChange={props.onChange}>{items}</Select>\n    </FormControl>\n  )\n}\n\nexport default Languages","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\n\nconst Params = (props) => {\n  let items = props.params.map((param) => {\n    if (param.type === 'string') {\n      if ('choices' in param) {\n        return <TextField\n          select\n          onChange={(e) => props.onChange(param.name, e.target.value)}\n          label={param.name}\n        >\n          {param.choices.map(c => (<option key={c} value={c}>{c}</option>))}\n        </TextField>\n      }\n      else {\n        return <TextField\n          key={param.name}\n          required={param.required}\n          label={param.name}\n          onChange={(e) => props.onChange(param.name, e.target.value)}\n        />\n      }\n    }\n    else if (param.type === 'int') {\n      return <TextField\n        key={param.name}\n        required={param.required}\n        label={param.name}\n        onChange={(e) => props.onChange(param.name, parseInt(e.target.value))}\n        type='number'\n      />\n    }\n  })\n\n  return <div>{items}</div>\n}\n\nexport default Params","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport TextField from '@material-ui/core/TextField'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport Switch from '@material-ui/core/Switch'\nimport Grid from '@material-ui/core/Grid'\nimport { styled } from '@material-ui/core/styles'\n\nimport theme from './theme'\nimport Languages from './Languages'\nimport Params from './Params'\n\nconst LargeTextField = styled(TextField)({\n  width: '100%'\n})\n\nconst SpacedArea = styled(CardActions)({\n  padding: theme.spacing(2)\n})\n\nconst Text = (props) => {\n  return (\n    <Card>\n      <CardContent>\n        <CardHeader title='Try Charade here' />\n        <LargeTextField\n          label='Insert text to be analyzed'\n          multiline\n          variant='outlined'\n          rows={20}\n          value={props.content}\n          onChange={props.onChange}\n        />\n      </CardContent>\n      <SpacedArea>\n        <Grid container spacing={3}>\n          <Grid item xs={2}>\n            <FormControlLabel\n              control={<Switch checked={props.debug} onChange={props.onToggleDebug} />}\n              label='Debug'\n              labelPlacement='start'\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <Languages choices={props.langs} onChange={props.onChooseLang} lang={props.lang} />\n          </Grid>\n          <Grid item xs={6}>\n            <Params params={props.extraParams} onChange={props.onChangeParam} />\n          </Grid>\n          <Grid item xs={2}>\n            <FormControl>\n              <Button variant='contained' color='primary' onClick={props.onSend}>Send</Button>\n            </FormControl>\n          </Grid>\n        </Grid>\n\n      </SpacedArea>\n    </Card>\n  )\n}\n\nexport default Text","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport ReactJson from 'react-json-view'\nimport { styled } from '@material-ui/core/styles'\n\nimport theme from './theme'\n\nconst LargeCard = styled(Card)({\n  width: '100%',\n  padding: theme.spacing(2)\n})\n\nconst Response = (props) => {\n  return (\n    <LargeCard>\n        <CardContent>\n          <ReactJson\n            src={props.response}\n            displayObjectSize={false}\n            displayDataTypes={false}\n          />\n\n        </CardContent>\n    </LargeCard>\n  )\n}\n\nexport default Response","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport { getServices, callServices } from './api'\nimport ServiceLine from './ServiceLine'\nimport Text from './Text'\nimport Response from './Response'\n\nfunction intersection(xs, ys) {\n  let result = []\n  xs.forEach((x) => { if (ys.some((y) => y === x)) result.push(x) })\n  return result\n}\n\nclass ServiceList extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      text: '',\n      selected: {},\n      extraParams: {},\n      json: {},\n      debug: false,\n      lang: undefined,\n      response: undefined,\n      visibleTab: 0\n    }\n\n    getServices\n      .then((response) => response.json())\n      .then((json) => this.setState({\n        json: json.services\n      }))\n  }\n\n  onTextChange(event) {\n    this.setState({ text: event.target.value })\n  }\n\n  onSelect(task, name, langs, extraParams) {\n    if (this.state.json[task]) {\n      let currentSelection = this.state.selected\n      if (currentSelection[task] && (currentSelection[task]['name'] === name)) {\n        currentSelection[task] = undefined\n      }\n      else {\n        currentSelection[task] = {\n          name: name,\n          langs: langs,\n          extraParams: extraParams\n        }\n      }\n      this.setState({ selected: currentSelection })\n    }\n  }\n\n  onSend() {\n    let tasks = []\n    Object.entries(this.state.selected).forEach(([k, v]) => {\n      tasks.push({task: k, name: v.name})\n    })\n    let request = {\n      text: this.state.text,\n      tasks: tasks,\n      debug: this.state.debug\n    }\n    if (this.state.lang) {\n      request.lang = this.state.lang\n    }\n    Object.entries(this.state.extraParams).forEach(([k, v]) => {\n      request[k] = v\n    })\n    callServices(request)\n      .then((response) => response.json())\n      .then((json) => this.onResults(json))\n  }\n\n  onToggleDebug() {\n    this.setState({ debug: !this.state.debug })\n  }\n\n  onResults(response) {\n    this.setState({\n      response: response,\n      visibleTab: 1\n    })\n  }\n\n  onChangeTab(event, tab) {\n    this.setState({ visibleTab: tab })\n  }\n\n  onChooseLang(event, target) {\n    const lang = (target.key === 'none') ? undefined : target.key\n    this.setState({ lang: lang })\n  }\n\n  onChangeParam(param, value) {\n    let currentParams = this.state.extraParams\n    currentParams[param] = value\n    this.setState({ extraParams: currentParams })\n  }\n\n  collectLangs() {\n    var result = null\n    Object.entries(this.state.selected).forEach(([k, v]) => {\n      var langs = []\n      if (v && v.langs) {\n        v.langs.forEach((lang) => {\n          if (lang !== '*') {\n            langs.push(lang)\n          }\n        })\n      }\n      if (langs.length > 0) {\n        if (result == null) {\n          result = langs\n        }\n        else {\n          result = intersection(result, langs)\n        }\n      }\n    })\n\n    return result\n  }\n\n  collectExtraParams() {\n    var result = []\n    Object.entries(this.state.selected).forEach(([k, v]) => {\n      if (v && v.extraParams) {\n        result = result.concat(v.extraParams)\n      }\n    })\n    return result\n  }\n\n  render() {\n    const onSelect = this.onSelect.bind(this)\n    const lowerView = (this.state.visibleTab === 0) ?\n      Object.entries(this.state.json).map(\n        ([k, v]) => <ServiceLine\n          key={k}\n          task={k}\n          implementations={v}\n          selected={this.state.selected[k] && this.state.selected[k]['name']}\n          onSelect={onSelect}\n        />\n      ) :\n      <Response response={this.state.response} />\n\n    return (\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Text\n            onChange={this.onTextChange.bind(this)}\n            content={this.state.text}\n            debug={this.state.debug}\n            onToggleDebug={this.onToggleDebug.bind(this)}\n            onSend={this.onSend.bind(this)}\n            lang={this.state.lang}\n            langs={this.collectLangs()}\n            onChooseLang={this.onChooseLang.bind(this)}\n            extraParams={this.collectExtraParams()}\n            onChangeParam={this.onChangeParam.bind(this)}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Tabs\n            value={this.state.visibleTab}\n            onChange={this.onChangeTab.bind(this)}\n            indicatorColor='primary'\n            textColor='primary'\n            variant='fullWidth'\n          >\n            <Tab label='Services' />\n            <Tab label='Response' />\n          </Tabs>\n        </Grid>\n        {lowerView}\n\n      </Grid>\n    )\n  }\n}\n\nexport default ServiceList","import React from 'react';\nimport Box from '@material-ui/core/Box'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport { styled, ThemeProvider } from '@material-ui/core/styles'\nimport 'typeface-roboto'\n\nimport ServiceList from './ServiceList'\nimport logo from './assets/charade.png'\nimport theme from './theme'\n\nconst Logo = styled(Box)({\n  height: '80px'\n})\n\nconst Header = styled(Grid)({\n  borderBottom: '1px solid grey',\n  marginBottom: '20px'\n})\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n\n        <Header item xs={12}>\n          <Logo component='img' src={logo} />\n        </Header>\n\n        <ServiceList />\n      </Container>\n    </ThemeProvider>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/charade.6491fe09.png\";"],"sourceRoot":""}